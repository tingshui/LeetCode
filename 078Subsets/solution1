/* 非递归法：每次取出一个数字， 添加到上一次的全子集中。
*/
class Solution {
    public List<List<Integer>> subsets(int[] nums) {
        if (nums == null | nums.length == 0){
            return null;
        }
        List<List<Integer>> result = new ArrayList<List<Integer>>();
        result.add(new ArrayList<Integer>());
        for (int i = 0; i < nums.length; i++){
            int resultSize = result.size();
            for (int j = 0; j < resultSize; j++){
                List<Integer> temp = new ArrayList<Integer>(result.get(j));
                temp.add(nums[i]);
                result.add(temp);
            }
        }
        return result;
    }
}